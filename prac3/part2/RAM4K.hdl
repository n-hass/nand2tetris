// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM4K.hdl

/**
 * Memory of 4K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM4K {
    IN in[16], load, address[12];
    OUT out[16];

    PARTS:
    DMux8Way(in=load, sel=address[9..11], a=ia, b=ib, c=ic, d=id, e=ie, f=if, g=ig, h=ih);

    RAM512(in=in, load=ia, address=address[0..8], out=o1);
    RAM512(in=in, load=ib, address=address[0..8], out=o2);
    RAM512(in=in, load=ic, address=address[0..8], out=o3);
    RAM512(in=in, load=id, address=address[0..8], out=o4);
    RAM512(in=in, load=ie, address=address[0..8], out=o5);
    RAM512(in=in, load=if, address=address[0..8], out=o6);
    RAM512(in=in, load=ig, address=address[0..8], out=o7);
    RAM512(in=in, load=ih, address=address[0..8], out=o8);

    Mux8Way16(a=o1, b=o2, c=o3, d=o4, e=o5, f=o6, g=o7, h=o8, sel=address[9..11], out=out);
}