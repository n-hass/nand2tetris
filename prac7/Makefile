CXX = g++
CXXFLAGS = -Wall -std=c++11


#build dir (where obj files are stored)
BUILDDIR = ./build

#include path for compile
INCLDIR = -I/include

#tst directories
TESTSRCDIR = ./tests/src
TESTBUILDDIR = ./tests/build

#source dir
SRCDIR = ./

BIN := Main
TEST-BIN := testsDriver

# all source files to be included from source dir
SRC := $(wildcard $(SRCDIR)/*.cpp)

# all test files from test dir
TST := $(wildcard $(TESTSRCDIR)/*.cpp)

#creates variable containing the required .o files using the TST variable
TST-OBJ := $(TST:$(TESTSRCDIR)/%.cpp=$(TESTBUILDDIR)/%.o)

TST-DEP := $(TST-OBJ:$(TESTBUILDDIR)/%.o=$(TESTBUILDDIR)/%.d)

# changes all source files to be object files stored in build dir
OBJ := $(SRC:$(SRCDIR)/%.cpp=$(BUILDDIR)/%.o)

# removes main.o from list to enable testing
OBJ := $(filter-out $(BUILDDIR)/$(BIN).o, $(OBJ))

#dependecies generated by compiler
DEP := $(OBJ:$(BUILDDIR)/%.o=$(BUILDDIR).d/%.d)




# UNIX-based OS variables & settings
RM = rm
DELOBJ = $(OBJ)
# Windows OS variables & settings
DEL = del
EXE = .exe
WDELOBJ = $(SRC:$(SRCDIR)/%.cpp=$(OBJDIR)\\%.o)


.PHONY: all
all: run-tests finish

.PHONY: $(BIN)
$(BIN): $(BUILDDIR)/$(BIN)

.PHONY: tests
tests: $(TESTBUILDDIR)/$(TEST-BIN)

sub:
	$(CXX) $(CXXFLAGS) $(INCLDIR) -g -MMD $(BIN).cpp -o $(BIN)
	./$(BIN)


#depeonds on test obj's
.PHONY: $(TESTBUILDDIR)/$(TEST-BIN)
$(TESTBUILDDIR)/$(TEST-BIN): $(BIN) $(TST-OBJ)

# includes depenecies generated by clang
#-include $(TST-DEP)

# compiles all src test files into obj files
$(TESTBUILDDIR)/%.o: $(TESTSRCDIR)/%.cpp $(OBJ)
	$(info Compiling $@)
	@mkdir -p $(TESTBUILDDIR) $(TESTBUILDDIR)/.dep;
	@$(CXX) $(CXXFLAGS) $(INCLDIR) -g -MMD $^ -o $@


#runs all test binaries in test build dir
run-tests: tests
	@\
	for test in $(TESTBUILDDIR)/*.o; \
	do \
	echo $$test;\
	./$$test; \
	done

# depends on object files first and then the main.o file
$(BUILDDIR)/$(BIN): $(OBJ) $(BUILDDIR)/$(BIN).o
# Just link all the object files.
	$(info Generating executable)
	@$(CXX) $(CXX_FLAGS) $(LDFLAGS) -g -MMD $^ -o $@

# dependecies generated by clang
-include $(DEP)

# Build target for every single object file.
# depends on changes made to the respective cpp file and h file
$(BUILDDIR)/%.o: $(SRCDIR)/%.cpp
	$(info Compiling $@)
	@mkdir -p $(BUILDDIR) $(BUILDDIR)/.dep;
	@$(CXX) $(CXXFLAGS) $(INCLDIR) -g -MMD -c $< -o $@;

$(BUILDDIR)/$(BIN).o: $(BIN).cpp
	$(info Compiling $@)
	@mkdir -p $(BUILDDIR) $(BUILDDIR)/.dep;
	@$(CXX) $(CXXFLAGS) $(INCLDIR) -g -MMD -c $< -o $@;


.PHONY: finish
finish:
	$(info $\***********Cleaning compiler generated files***********)
	@\
	for dep in $(BUILDDIR)/*.d; \
	do \
	mv $$dep ${BUILDDIR}/.dep;\
	done



.PHONY: clean
clean:
	@$(RM) -f $(OBJ) $(DEP) $(BUILDDIR)/$(BIN) $(TST-OBJ) $(TST-DEP) $(BUILDDIR)/main.o
	@$(RM) -rf $(BUILDDIR)/.dep ${TESTBUILDDIR}/.dep
	$(info $\*****Project cleaned********)